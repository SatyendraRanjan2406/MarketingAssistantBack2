# Generated by Django 4.2.7 on 2025-08-28 11:30:00

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('google_ads_new', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserMemory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferences', models.JSONField(default=dict, help_text='User preferences and settings')),
                ('learning_patterns', models.JSONField(default=dict, help_text='Learned user behavior patterns')),
                ('expertise_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='beginner', max_length=20)),
                ('favorite_topics', models.JSONField(default=list, help_text='Topics user frequently asks about')),
                ('preferred_analysis_depth', models.IntegerField(default=1, help_text='Preferred dig deeper depth')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='memory', to='auth.user')),
            ],
            options={
                'verbose_name': 'User Memory',
                'verbose_name_plural': 'User Memories',
                'db_table': 'user_memory',
            },
        ),
        migrations.CreateModel(
            name='ConversationMemory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=255, unique=True)),
                ('google_ads_account', models.CharField(blank=True, max_length=255, null=True)),
                ('conversation_history', models.JSONField(default=list, help_text='Full conversation history')),
                ('context_summary', models.JSONField(default=dict, help_text='Context summary for memory')),
                ('intent_history', models.JSONField(default=list, help_text='Intent classification history')),
                ('analysis_results', models.JSONField(default=list, help_text='Analysis results and insights')),
                ('creative_generations', models.JSONField(default=list, help_text='Generated creative content')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='auth.user')),
            ],
            options={
                'verbose_name': 'Conversation Memory',
                'verbose_name_plural': 'Conversation Memories',
                'db_table': 'conversation_memory',
            },
        ),
        migrations.CreateModel(
            name='CrossSessionMemory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory_type', models.CharField(help_text='Type of cross-session memory', max_length=50)),
                ('memory_key', models.CharField(help_text='Key identifier for the memory', max_length=255)),
                ('memory_data', models.JSONField(default=dict, help_text='Memory data and context')),
                ('importance_score', models.FloatField(default=0.5, help_text='Importance of this memory')),
                ('access_count', models.IntegerField(default=0, help_text='Number of times accessed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Memory expiration date', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cross_session_memory', to='auth.user')),
            ],
            options={
                'verbose_name': 'Cross Session Memory',
                'verbose_name_plural': 'Cross Session Memories',
                'db_table': 'cross_session_memory',
            },
        ),
        migrations.CreateModel(
            name='AdaptiveResponsePattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern_type', models.CharField(help_text='Type of response pattern', max_length=50)),
                ('trigger_conditions', models.JSONField(default=dict, help_text='Conditions that trigger this pattern')),
                ('response_template', models.JSONField(default=dict, help_text='Response template and structure')),
                ('success_rate', models.FloatField(default=0.0, help_text='Success rate of this pattern')),
                ('usage_count', models.IntegerField(default=0, help_text='Number of times used')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='response_patterns', to='auth.user')),
            ],
            options={
                'verbose_name': 'Adaptive Response Pattern',
                'verbose_name_plural': 'Adaptive Response Patterns',
                'db_table': 'adaptive_response_patterns',
            },
        ),
        migrations.AddIndex(
            model_name='conversationmemory',
            index=models.Index(fields=['user', 'started_at'], name='conversation_user_id_2b8c8c_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationmemory',
            index=models.Index(fields=['session_id'], name='conversation_session_8f9c8c_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationmemory',
            index=models.Index(fields=['last_activity'], name='conversation_last_ac_9d8c8c_idx'),
        ),
        migrations.AddIndex(
            model_name='crosssessionmemory',
            index=models.Index(fields=['user', 'memory_type'], name='cross_sessio_user_id_1a8c8c_idx'),
        ),
        migrations.AddIndex(
            model_name='crosssessionmemory',
            index=models.Index(fields=['importance_score'], name='cross_sessio_importa_2b8c8c_idx'),
        ),
        migrations.AddIndex(
            model_name='crosssessionmemory',
            index=models.Index(fields=['expires_at'], name='cross_sessio_expires_3c8c8c_idx'),
        ),
        migrations.AddIndex(
            model_name='adaptiveresponsepattern',
            index=models.Index(fields=['user', 'pattern_type'], name='adaptive_re_user_id_4d8c8c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='crosssessionmemory',
            unique_together={('user', 'memory_type', 'memory_key')},
        ),
        migrations.AlterUniqueTogether(
            name='adaptiveresponsepattern',
            unique_together={('user', 'pattern_type')},
        ),
    ]
